name: Deploy to ECR

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]

permissions:
    id-token: write   # This is required for requesting the JWT
    contents: read    # This is required for actions/checkout

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
        role-session-name: ecrsession
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      with:
        mask-password: true
      uses: aws-actions/amazon-ecr-login@v1
     
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to ECR
      uses: docker/login-action@v3
      env: 
        DOCKER_USER: docker_username_${{ secrets.AWS_ACCOUNT }}_dkr_ecr_${{ secrets.AWS_REGION_UNDERSCORE }}_amazonaws_com
        DOCKER_PW: docker_password_${{ secrets.AWS_ACCOUNT }}_dkr_ecr_${{ secrets.AWS_REGION_UNDERSCORE }}_amazonaws_com
      with:
        registry: ${{ steps.login-ecr.outputs.registry }}
        username: ${{ steps.login-ecr.outputs['${DOCKER_USER}'] }}
        password: ${{ steps.login-ecr.outputs['${DOCKER_PW}'] }}
    
    - name: build and push
      uses: docker/build-push-action@v5
      env: 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: mwaa-spike-private
        IMAGE_TAG: ${{ steps.login-ecr.outputs.registry }}/mwaa-spike-private:temp-test
      with:
        context: .
        platforms: linux/x86_64
        push: true
        secrets: |
          "github_token=${{ secrets.GITHUB_TOKEN }}"
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/mwaa-spike-private:temp-test
    # - name: Build, tag, and push image to Amazon ECR üè∑
    #   id: build-image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: "mwaa-spike-private"
    #     IMAGE_TAG: v1
    #   run: |
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"    
      
    # - name: Get AWS ECR creds
    #   env: 
    #     ECR_REPOSITORY: mwaa-spike-private
    #     IMAGE_TAG: temp-test
    #   run: |
    #     aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
    #     docker build -t ${{ secrets.ECR_REGISTRY }}/$ECR_REPOSITORY:$IMAGE_TAG .
    #     docker push ${{ secrets.ECR_REGISTRY }}/$ECR_REPOSITORY:$IMAGE_TAG

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
    #     aws-region: us-east-2

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v2

    # - name: Build, tag, and push image to Amazon ECR
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: mwaa-spike-private
    #     IMAGE_TAG: temp-test
    #   run: |
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG